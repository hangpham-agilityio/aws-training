AWSTemplateFormatVersion: "2010-09-09"
Description: Product Delivery App

Parameters:
  Environment:
    Type: String
    AllowedValues:
      - dev
      - stag
      - prod

  GitHubRepo:
    Type: String
    Default: hangpham-agilityio/aws-training/
    Description: owner/repository/
  GitBranch:
    Type: String
    Default: aws-practice/sample-product-delivery

  GitHubOAuthToken:
    Type: String
    MinLength: 40
    MaxLength: 40
    AllowedPattern: "[a-z0-9]*"
    NoEcho: true

Resources:
  # CodePipeline
  CodeBuildTemplateBucket:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: codebuild-nested-templates

  PipelineArtifactsBucket:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: !Sub "${Environment}-pd-pipeline-bucket"

  CodeBuildRole:
    # http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess
      RoleName: "codebuild-role"

  CodePipelineRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess
      RoleName: "codepipeline-role"

  CloudFormationRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - cloudformation.amazonaws.com
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess
      RoleName: "cloudformation-role"

  CodePipeline:
    # http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-pipeline.html
    Type: "AWS::CodePipeline::Pipeline"
    DependsOn:
      - PipelineArtifactsBucket
      - CodePipelineRole
    Properties:
      ArtifactStore:
        Type: S3
        Location: !Ref PipelineArtifactsBucket
      Name: "my-practice-pipeline"
      RestartExecutionOnUpdate: false
      RoleArn: !GetAtt CodePipelineRole.Arn
      Stages:
        # Stage 1:  Get the source from GitHub:
        - Name: Source
          Actions:
            # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-stages-actions-actiontypeid.html
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: 1
              InputArtifacts: []
              OutputArtifacts:
                - Name: SourceArtifacts
              Configuration:
                Owner: !Select [0, !Split [ "/" , !Ref GitHubRepo ]]
                Repo: !Select [1, !Split [ "/" , !Ref GitHubRepo ]]
                Branch: !Ref GitBranch
                PollForSourceChanges: True
                OAuthToken: !Ref GitHubOAuthToken
              RunOrder: 1

        # Stage 2: Build
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              InputArtifacts:
                - Name: SourceArtifacts
              OutputArtifacts:
                - Name: BuildArtifacts
              Configuration:
                ProjectName: !Ref CodeBuild
              RunOrder: 1
        # Stage 3: Deploy
        - Name: Deploy
          Actions:
            - Name: Deploy
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              InputArtifacts:
                - Name: BuildArtifacts
              Configuration:
                ActionMode: CREATE_UPDATE
                StackName: MainStack
                Capabilities: CAPABILITY_IAM
                RoleArn: !GetAtt CloudFormationRole.Arn
                TemplatePath: "BuildArtifacts::main-updated.yaml"
                ParameterOverrides: |-
                  {
                    "FirstTableName": "Product",
                    "SecondTableName": "Order",
                    "ReadCapacityUnits": "5",
                    "WriteCapacityUnits": "5",
                    "CognitoDomain": "product-delivery",
                    "CallbackURL": "https://example.com",
                    "IdentityPoolName": "my-dp",
                    "APIName": "product-delivery",
                    "APIGatewayType": "REGIONAL",
                    "AdminEmail": "hangpham0506@gmail.com",
                    "TopicName": "Order-Topic"
                  }
              RunOrder: 1

  CodeBuild:
    # http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html
    Type: "AWS::CodeBuild::Project"
    DependsOn:
      - CodeBuildRole
    Properties:
      Name: "pd-codebuild"
      Description: !Sub "CodeBuild for my app"
      ServiceRole: !Ref CodeBuildRole
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec.yml
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:2.0
        PrivilegedMode: True

      Artifacts:
        Type: CODEPIPELINE
  #---------END CodePipeline---------

Outputs:
  CodePipeline:
    Description: "CodePipeline"
    Value: !Ref CodePipeline

  PipelineArtifactsBucket:
    Description: "Pipeline Artifacts Bucket"
    Value: !Ref PipelineArtifactsBucket
